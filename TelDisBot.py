import disnake
import asyncio
import os
from disnake.ext import commands
from telegram.ext import Application

# –¢–æ–∫–µ–Ω—ã
DISCORD_TOKEN = "token"
TELEGRAM_TOKEN = "token"
TELEGRAM_CHAT_ID = "id"

# –§–∞–π–ª—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
TRACKED_CHANNELS_FILE = "tracked_channels.txt"
TRACKED_USERS_FILE = "tracked_users.txt"
TRACKED_CHANNELS = []
TRACKED_USERS = []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_tracked_channels():
    if os.path.exists(TRACKED_CHANNELS_FILE):
        with open(TRACKED_CHANNELS_FILE, "r") as f:
            return [line.strip() for line in f.readlines() if line.strip()]
    return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
def load_tracked_users():
    if os.path.exists(TRACKED_USERS_FILE):
        with open(TRACKED_USERS_FILE, "r") as f:
            return [line.strip() for line in f.readlines() if line.strip()]
    return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –≤ —Ñ–∞–π–ª
def save_tracked_channel(channel_id: str):
    with open(TRACKED_CHANNELS_FILE, "a") as f:
        f.write(f"{channel_id}\n")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª
def save_tracked_user(user_id: str):
    with open(TRACKED_USERS_FILE, "a") as f:
        f.write(f"{user_id}\n")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —Ñ–∞–π–ª–∞
def remove_tracked_channel(channel_id: str):
    global TRACKED_CHANNELS
    TRACKED_CHANNELS = [ch for ch in TRACKED_CHANNELS if ch != channel_id]
    with open(TRACKED_CHANNELS_FILE, "w") as f:
        for ch in TRACKED_CHANNELS:
            f.write(f"{ch}\n")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —Ñ–∞–π–ª–∞
def remove_tracked_user(user_id: str):
    global TRACKED_USERS
    TRACKED_USERS = [usr for usr in TRACKED_USERS if usr != user_id]
    with open(TRACKED_USERS_FILE, "w") as f:
        for usr in TRACKED_USERS:
            f.write(f"{usr}\n")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
TRACKED_CHANNELS = load_tracked_channels()
TRACKED_USERS = load_tracked_users()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞
app = Application.builder().token(TELEGRAM_TOKEN).build()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Discord-–±–æ—Ç–∞
intents = disnake.Intents.default()
intents.messages = True
intents.message_content = True  # –í–∫–ª—é—á–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π!

bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

# ======= –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê =======

@bot.command(name="list_tracked")
async def list_tracked(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–∞–Ω–∞–ª–æ–≤"""
    if not TRACKED_CHANNELS and not TRACKED_USERS:
        await ctx.send("üìã –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—É—Å—Ç.")
        return

    tracked_channels_str = "\n".join(f"<#{ch}>" for ch in TRACKED_CHANNELS) if TRACKED_CHANNELS else "–ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤."
    tracked_users_str = "\n".join(f"<@{usr}>" for usr in TRACKED_USERS) if TRACKED_USERS else "–ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."

    message = (f"üìã **–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö**:\n\n"
               f"**–ö–∞–Ω–∞–ª—ã:**\n{tracked_channels_str}\n\n"
               f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**\n{tracked_users_str}")

    await ctx.send(message)

@bot.command(name="add_channel")
async def add_channel(ctx, channel: disnake.TextChannel):
    """–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö"""
    channel_id_str = str(channel.id)
    if channel_id_str not in TRACKED_CHANNELS:
        TRACKED_CHANNELS.append(channel_id_str)
        save_tracked_channel(channel_id_str)
        await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.")
    else:
        await ctx.send(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è.")

@bot.command(name="remove_channel")
async def remove_channel(ctx, channel: disnake.TextChannel):
    """–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö"""
    channel_id_str = str(channel.id)
    if channel_id_str in TRACKED_CHANNELS:
        remove_tracked_channel(channel_id_str)
        await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.")
    else:
        await ctx.send(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ.")

@bot.command(name="add_user")
async def add_user(ctx, user: disnake.Member):
    """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö"""
    user_id_str = str(user.id)
    if user_id_str not in TRACKED_USERS:
        TRACKED_USERS.append(user_id_str)
        save_tracked_user(user_id_str)
        await ctx.send(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.")
    else:
        await ctx.send(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è.")

@bot.command(name="remove_user")
async def remove_user(ctx, user: disnake.Member):
    """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö"""
    user_id_str = str(user.id)
    if user_id_str in TRACKED_USERS:
        remove_tracked_user(user_id_str)
        await ctx.send(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.")
    else:
        await ctx.send(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ.")

# ======= –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô =======

@bot.event
async def on_message(message: disnake.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∏—Ö –≤ Telegram, –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    if message.author.bot:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤

    print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.content} –æ—Ç {message.author}")  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    if str(message.channel.id) in TRACKED_CHANNELS and str(message.author.id) in TRACKED_USERS:
        text = f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Discord\nüë§ –û—Ç: {message.author}\nüí¨ {message.content}"
        asyncio.create_task(send_to_telegram(text))

    await bot.process_commands(message)  # –ë–µ–∑ —ç—Ç–æ–≥–æ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!

async def send_to_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    await app.bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(DISCORD_TOKEN)